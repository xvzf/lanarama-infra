---
- name: Create the CoreDNS group
  group:
    name: "{{ coredns_system_group }}"
    state: present
    system: true

- name: Create the CoreDNS user
  user:
    name: "{{ coredns_system_user }}"
    groups: "{{ coredns_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /

- name: Create CoreDNS configuration directory
  file:
    path: "/etc/coredns"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: "Get checksum for {{ go_arch }} architecture"
  set_fact:
    coredns_checksum: "{{ lookup('url', 'https://github.com/coredns/coredns/releases/download/v' + coredns_version + '/coredns_' + coredns_version + '_linux_' + go_arch + '.tgz.sha256').split(' ')[0] }}"
  run_once: true

- name: Download CoreDNS binary to local folder
  become: false
  get_url:
    url: "https://github.com/coredns/coredns/releases/download/v{{ coredns_version }}/coredns_{{ coredns_version }}_linux_{{ go_arch }}.tgz"
    dest: "/tmp/coredns_{{ coredns_version }}_linux_{{ go_arch }}.tgz"
    checksum: "sha256:{{ coredns_checksum }}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unpack CoreDNS binary
  become: false
  unarchive:
    src: "/tmp/coredns_{{ coredns_version }}_linux_{{ go_arch }}.tgz"
    dest: "/tmp"
    creates: "/tmp/coredns"
  delegate_to: localhost
  check_mode: false

- name: Propagate CoreDNS binaries
  copy:
    src: "/tmp/coredns"
    dest: "/usr/local/bin/coredns"
    mode: 0750
    owner: "{{ coredns_system_user }}"
    group: "{{ coredns_system_group }}"
  notify: restart coredns
  when: not ansible_check_mode

- name: Copy the CoreDNS systemd service file
  template:
    src: coredns.service.j2
    dest: /etc/systemd/system/coredns.service
    owner: root
    group: root
    mode: 0644
  notify: restart coredns